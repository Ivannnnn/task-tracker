{"version":3,"sources":["serviceWorker.js","components/Input.js","utils.js","db/db.js","db/repository.js","hooks.js","db/models/utils.js","db/models/ProjectModel.js","pages/ProjectsPage.js","components/Estimate/durationPicker/utils.js","components/Estimate/Estimate.js","components/Estimate/durationPicker/durationPicker.js","components/NotFound.js","db/models/TaskModel.js","components/ChildListObserver.js","pages/TasksPage.js","pages/StatisticsPage/ByDay.js","pages/StatisticsPage/ByProject.js","pages/StatisticsPage/StatisticsPage.js","index.js"],"names":["Boolean","window","location","hostname","match","Input","onChange","type","props","e","target","value","padZero","val","n","toString","length","slice","startOfDay","date","Date","setHours","secsToTime","secs","mm","getTime","substr","Math","floor","join","keyBy","collection","key","result","forEach","item","classes","args","map","arg","undefined","Object","keys","filter","sortStrategies","asc","a","b","desc","arraySwap","arr","from","to","splice","relate","data","relations","toArray","d","constructor","Array","values","relation","replace","split","parentName","parentKey","childName","childKey","parentData","childData","childByParentKey","index","i","createIndex","parent","childIndex","id","pick","reduce","acc","pluck","prop","obj","yyyymmdd","getFullYear","getMonth","getDate","db","Dexie","addons","keyByAddon","this","Collection","prototype","Table","whereIn","where","inArr","anyOf","version","stores","projects","tasks","times","getStatisticsOnDay","day","ids","entities","getStatisticsBelongingToProject","projectId","taskId","getAllProjects","addProject","add","updateProject","modify","removeProject","transaction","primaryKeys","taskIds","Promise","all","delete","getTasksWithTimesBelongingToProject","addTask","updateTask","removeTask","updateTaskDailyTime","time","first","duration","today","put","useImmer","initialValue","useState","updateValue","useCallback","updater","produce","useOrderable","orderBy","items","updateItems","set","ascOrDesc","sort","sortBy","resolve","revert","firstItem","orderValue","unshift","remove","update","assign","move","direction","targetIndex","up","prevIndex","prevOrderVal","targetOrderVal","down","nextIndex","nextOrderVal","createModel","definition","allowed","required","defaults","assignDefaults","array1","array2","fieldsLacking","includes","Error","uuid","random","TaskModel","title","order","Container","useLocation","setLocation","projectMethods","project","repository","catch","firstProject","secondProject","newProject","Project","useEffect","Projects","redirect","path","moveProject","createProject","onClick","last","className","confirm","handleDelete","on","el","events","name","addEventListener","off","removeEventListener","State","state","watchers","fresh","f","watch","watchersObj","push","Estimate","seconds","ref","useRef","$el","emitEvent","CONFIG","hours","minutes","Number","selected","updateState","stateChange","view","watchState","select","actions","what","newHours","newMinutes","selectionStart","selectionEnd","start","end","setSelectionRange","setTimeout","indexOf","registerEvents","click","blur","keydown","preventDefault","proxy","ArrowUp","ArrowDown","Tab","isNaN","numPress","wheel","wheelDelta","wheelUp","wheelDown","tab","number","last2Digits","String","unregisterEvents","durationPicker","current","timeToSecs","defaultValue","NotFound","estimate","ChildListObserver","children","onInsert","MutationObserver","mutations","observe","childList","React","createElement","params","tasksMethods","activeTaskIndex","updateActiveTaskIndex","mapData","task","timeId","total","isToday","firstTask","secondTask","newTask","Task","callback","delay","savedCallback","setInterval","clearInterval","useInterval","Tasks","moveTask","createTask","activateTask","deactivateTask","currentlyActive","handleCreate","querySelector","focus","active","onKeyPress","setDay","updateProjects","updateTotal","totalTime","ByDay","onDayChange","renderTask","renderProject","taskTimesByDay","xs","rv","x","ByProject","Statistics","App","component","ProjectsPage","StatisticsPage","TasksPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bc8017e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Input({ onChange, type = 'text', ...props }) {\r\n  return (\r\n    <input type={type} {...props} onChange={(e) => onChange(e.target.value)} />\r\n  )\r\n}\r\n","export const padZero = (val, n) =>\r\n  val.toString().length > n ? val : ('0' + val).slice(n * -1)\r\n\r\nexport const startOfDay = (date) =>\r\n  new Date(new Date(date).setHours(0, 0, 0, 0))\r\n\r\nexport const secsToTime = (secs) => {\r\n  const mm = new Date(startOfDay(new Date()).getTime() + secs * 1000)\r\n    .toString()\r\n    .substr(19, 2)\r\n  const hh = padZero(Math.floor(secs / 60 / 60), 2)\r\n\r\n  return [hh, mm].join(':')\r\n}\r\n\r\nexport function keyBy(collection, key) {\r\n  const result = {}\r\n  collection.forEach((item) => {\r\n    result[item[key]] = item\r\n  })\r\n  return result\r\n}\r\n\r\nexport const classes = (...args) => {\r\n  return args\r\n    .map((arg) => {\r\n      if (arg === null || arg === undefined) return null\r\n      return typeof arg === 'string'\r\n        ? arg\r\n        : Object.keys(arg)\r\n            .filter((key) => arg[key])\r\n            .join(' ')\r\n    })\r\n    .filter(Boolean)\r\n    .join(' ')\r\n}\r\n\r\nconst sortStrategies = {\r\n  asc: (a, b) => (a - b > 0 ? 1 : -1),\r\n  desc: (a, b) => (a - b < 0 ? 1 : -1),\r\n}\r\n\r\nexport const sortByKey = (obj, ascOrDesc) => {\r\n  return Object.keys(obj)\r\n    .sort((a, b) => sortStrategies[ascOrDesc](a, b))\r\n    .reduce((acc, key) => ({ ...acc, [key]: obj[key] }), {})\r\n}\r\n\r\nexport const sortBy = (arr, key = false, ascOrDesc = 'asc') => {\r\n  return [...arr].sort((a, b) =>\r\n    sortStrategies[ascOrDesc](key ? a[key] : a, key ? b[key] : b)\r\n  )\r\n}\r\n\r\nexport function arraySwap(arr, from, to) {\r\n  arr.splice(from, 1, arr.splice(to, 1, arr[from])[0])\r\n}\r\n\r\nconst createIndex = (arr, key) => {\r\n  const index = {}\r\n  arr.forEach((item, i) => {\r\n    index[item[key]] = index[item[key]] ? [...index[item[key]], i] : [i]\r\n  })\r\n  return index\r\n}\r\n\r\nexport const relate = (data, relations) => {\r\n  const toArray = (d) => (d.constructor === Array ? d : Object.values(d))\r\n\r\n  relations.forEach((relation) => {\r\n    relation = relation.replace(/ +?/g, '').split('->')\r\n    const [\r\n      [parentName, parentKey],\r\n      [childName, childKey],\r\n    ] = relation.map((item) => item.split('.'))\r\n\r\n    const parentData = toArray(data[parentName])\r\n    const childData = toArray(data[childName])\r\n\r\n    const childByParentKey = createIndex(childData, childKey)\r\n\r\n    parentData.forEach((parent, i) => {\r\n      parent[childName] = (childByParentKey[parent[parentKey]] || []).map(\r\n        (childIndex) => childData[childIndex].id\r\n      )\r\n    })\r\n  })\r\n}\r\n\r\nexport const pick = (props, keys) =>\r\n  keys.reduce((acc, key) => {\r\n    return { ...acc, [key]: props[key] }\r\n  }, {})\r\n\r\nexport const pluck = (arr, prop) => {\r\n  if (arr.constructor !== Array) arr = Object.values(arr)\r\n  return arr.map((obj) => obj[prop])\r\n}\r\n\r\nexport const intersect = (array1, array2) =>\r\n  array1.filter((value) => !array2.includes(value))\r\n\r\nexport const groupBy = (xs, key) =>\r\n  xs.reduce(function (rv, x) {\r\n    ;(rv[x[key]] = rv[x[key]] || []).push(x)\r\n    return rv\r\n  }, {})\r\n\r\nexport const yyyymmdd = (d) =>\r\n  `${d.getFullYear()}-${('0' + (d.getMonth() + 1)).slice(-2)}-${(\r\n    '0' + d.getDate()\r\n  ).slice(-2)}`\r\n","import Dexie from 'dexie'\r\nimport { keyBy } from 'utils'\r\n\r\nconst addKeyBy = (db) => {\r\n  const keyByAddon = async function (key) {\r\n    return keyBy(await this.toArray(), key)\r\n  }\r\n  db.Collection.prototype.keyBy = keyByAddon\r\n  db.Table.prototype.keyBy = keyByAddon\r\n}\r\n\r\nconst addWhereIn = (db) => {\r\n  db.Table.prototype.whereIn = function (where) {\r\n    const key = Object.keys(where)[0]\r\n    const inArr = where[key]\r\n    return this.where(key).anyOf(inArr)\r\n  }\r\n}\r\n\r\nconst db = new Dexie('db', { addons: [addKeyBy, addWhereIn] })\r\n\r\ndb.version(1).stores({\r\n  projects: 'id, title', // order\r\n  tasks: 'id, projectId', // title, estimate, order\r\n  times: '++id, day, taskId', // duration\r\n})\r\n\r\nexport default db\r\n","import db from './db'\r\nimport { startOfDay, relate, pick, pluck } from 'utils'\r\n\r\nexport default {\r\n  getStatisticsOnDay: async (day) => {\r\n    day = startOfDay(day).getTime()\r\n\r\n    const times = await db.times.where({ day }).keyBy('id')\r\n    const tasks = await db.tasks\r\n      .whereIn({ id: pluck(times, 'taskId') })\r\n      .keyBy('id')\r\n    const projects = await db.projects\r\n      .whereIn({\r\n        id: pluck(tasks, 'projectId'),\r\n      })\r\n      .keyBy('id')\r\n\r\n    relate({ projects, tasks, times }, [\r\n      'projects.id -> tasks.projectId',\r\n      'tasks.id -> times.taskId',\r\n    ])\r\n\r\n    return {\r\n      ids: Object.keys(projects),\r\n      entities: { projects, tasks, times },\r\n    }\r\n  },\r\n  getStatisticsBelongingToProject: async (projectId) => {\r\n    const projects = await db.projects.where({ id: projectId }).keyBy('id')\r\n    const tasks = await db.tasks.where({ projectId }).keyBy('id')\r\n    const times = await db.times\r\n      .whereIn({ taskId: pluck(tasks, 'id') })\r\n      .keyBy('id')\r\n\r\n    relate({ projects, tasks, times }, [\r\n      'projects.id -> tasks.projectId',\r\n      'tasks.id -> times.taskId',\r\n    ])\r\n\r\n    return {\r\n      ids: Object.keys(projects),\r\n      entities: { projects, tasks, times },\r\n    }\r\n  },\r\n  getAllProjects: () => db.projects.toArray(),\r\n  addProject: (props) => {\r\n    return db.projects.add(props)\r\n  },\r\n  updateProject({ id, ...props }) {\r\n    return db.projects.where({ id }).modify(props)\r\n  },\r\n  removeProject({ id }) {\r\n    return db.transaction('rw', db.projects, db.tasks, db.times, async () => {\r\n      const taskIds = await db.tasks.where({ projectId: id }).primaryKeys()\r\n      return Promise.all([\r\n        db.projects.delete(id),\r\n        db.tasks.whereIn({ id: taskIds }).delete(),\r\n        db.times.whereIn({ taskId: taskIds }).delete(),\r\n      ])\r\n    })\r\n  },\r\n\r\n  async getTasksWithTimesBelongingToProject(projectId) {\r\n    const projects = await db.projects.where({ id: projectId }).keyBy('id')\r\n    const tasks = await db.tasks.where({ projectId }).keyBy('id')\r\n    const times = await db.times\r\n      .whereIn({ taskId: Object.keys(tasks) })\r\n      .keyBy('id')\r\n\r\n    relate({ projects, tasks, times }, [\r\n      'projects.id -> tasks.projectId',\r\n      'tasks.id -> times.taskId',\r\n    ])\r\n\r\n    return {\r\n      ids: Object.keys(projects),\r\n      entities: { projects, tasks, times },\r\n    }\r\n  },\r\n\r\n  addTask(props) {\r\n    return db.tasks.add(props)\r\n  },\r\n\r\n  updateTask({ id, ...props }) {\r\n    return db.tasks\r\n      .where({ id })\r\n      .modify(pick(props, ['estimate', 'order', 'title', 'projectId']))\r\n  },\r\n  removeTask({ id }) {\r\n    return db.transaction('rw', db.tasks, db.times, async () => {\r\n      return Promise.all([\r\n        db.tasks.delete(id),\r\n        db.times.where({ taskId: id }).delete(),\r\n      ])\r\n    })\r\n  },\r\n  async updateTaskDailyTime({ id: taskId, time }) {\r\n    const day = startOfDay(new Date()).getTime()\r\n    const existing = await db.times.where({ taskId, day }).first()\r\n\r\n    return existing\r\n      ? await db.times.where({ day, taskId }).modify({ duration: time.today })\r\n      : await db.times.put({ day, duration: time.today, taskId })\r\n  },\r\n}\r\n","import { useCallback, useState, useRef, useEffect } from 'react'\r\nimport produce from 'immer'\r\nimport { sortBy, arraySwap } from 'utils'\r\n\r\nexport function useImmer(initialValue) {\r\n  const [val, updateValue] = useState(initialValue)\r\n  return [\r\n    val,\r\n    useCallback((updater) => {\r\n      updateValue(\r\n        produce(typeof updater === 'function' ? updater : () => updater)\r\n      )\r\n    }, []),\r\n  ]\r\n}\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef()\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  useEffect(() => {\r\n    const tick = () => savedCallback.current()\r\n    if (delay) {\r\n      let id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n  }, [delay])\r\n}\r\n\r\nexport const useOrderable = (orderBy) => {\r\n  const [items, updateItems] = useImmer([])\r\n\r\n  function set(data) {\r\n    updateItems(sortBy(data, orderBy, 'desc'))\r\n  }\r\n  function add(props) {\r\n    return new Promise((resolve) => {\r\n      const revert = () => updateItems(() => items)\r\n      updateItems((items) => {\r\n        const firstItem = items[0]\r\n        const orderValue = firstItem ? firstItem[orderBy] + 1 : 0\r\n        const item = { ...props, [orderBy]: orderValue }\r\n        items.unshift(item)\r\n        resolve([orderValue, revert])\r\n      })\r\n    })\r\n  }\r\n  function remove(index) {\r\n    const revert = () => updateItems(() => items)\r\n    return new Promise((resolve) => {\r\n      updateItems((items) => {\r\n        const item = items[index]\r\n        items.splice(index, 1)\r\n        resolve([{ ...item }, revert])\r\n      })\r\n    })\r\n  }\r\n  function update(index, props) {\r\n    const revert = () => updateItems(() => items)\r\n    return new Promise((resolve) => {\r\n      updateItems((items) => {\r\n        Object.assign(items[index], props)\r\n        resolve([{ ...items[index] }, revert])\r\n      })\r\n    })\r\n  }\r\n  function move(direction, targetIndex) {\r\n    const revert = () => updateItems(() => items)\r\n    return new Promise((resolve) => {\r\n      const strategy = {\r\n        up: () =>\r\n          targetIndex > 0 &&\r\n          updateItems((items) => {\r\n            const prevIndex = targetIndex - 1\r\n            const prevOrderVal = items[prevIndex][orderBy]\r\n            const targetOrderVal = items[targetIndex][orderBy]\r\n            items[prevIndex][orderBy] = targetOrderVal\r\n            items[targetIndex][orderBy] = prevOrderVal\r\n            arraySwap(items, targetIndex, prevIndex)\r\n            resolve([\r\n              { ...items[targetIndex] },\r\n              { ...items[prevIndex] },\r\n              revert,\r\n            ])\r\n          }),\r\n        down: () =>\r\n          targetIndex < items.length - 1 &&\r\n          updateItems((items) => {\r\n            const nextIndex = targetIndex + 1\r\n            const nextOrderVal = items[nextIndex][orderBy]\r\n            const targetOrderVal = items[targetIndex][orderBy]\r\n            items[nextIndex][orderBy] = targetOrderVal\r\n            items[targetIndex][orderBy] = nextOrderVal\r\n            arraySwap(items, targetIndex, nextIndex)\r\n            resolve([\r\n              { ...items[targetIndex] },\r\n              { ...items[nextIndex] },\r\n              revert,\r\n            ])\r\n          }),\r\n      }[direction]()\r\n    })\r\n  }\r\n\r\n  return [items, { set, add, remove, update, move }]\r\n}\r\n","import { pick, intersect } from 'utils'\r\n\r\nexport function createModel(definition) {\r\n  const allowed = Object.keys(definition)\r\n  const required = Object.keys(definition).filter(\r\n    (key) => definition[key] === true\r\n  )\r\n  const defaults = pick(\r\n    definition,\r\n    Object.keys(definition).filter((key) => definition[key] !== true)\r\n  )\r\n\r\n  function assignDefaults(props) {\r\n    props = Object.assign({}, defaults, props)\r\n    for (let key in props)\r\n      if (typeof props[key] === 'function') props[key] = props[key]()\r\n    return props\r\n  }\r\n\r\n  return function (props) {\r\n    props = assignDefaults(props)\r\n    const fieldsLacking = intersect(required, Object.keys(props))\r\n    if (fieldsLacking.length)\r\n      throw new Error(`Fields { ${fieldsLacking.join(', ')} } are lacking!`)\r\n    return pick(props, allowed)\r\n  }\r\n}\r\n\r\nexport function uuid(a) {\r\n  return a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid)\r\n}\r\n","import { createModel, uuid } from './utils'\r\n\r\nconst TaskModel = createModel({\r\n  id: () => uuid(),\r\n  title: '',\r\n  order: null,\r\n})\r\n\r\nexport default TaskModel\r\n","import React, { useEffect } from 'react'\r\nimport Input from 'components/Input'\r\nimport repository from 'db/repository'\r\nimport { useOrderable } from 'hooks'\r\nimport { useLocation } from 'wouter'\r\nimport Project from 'db/models/ProjectModel'\r\n\r\nexport default function Container() {\r\n  const [_, setLocation] = useLocation()\r\n  const [projects, projectMethods] = useOrderable('order')\r\n\r\n  useEffect(() => {\r\n    ;(async function () {\r\n      projectMethods.set(await repository.getAllProjects())\r\n    })()\r\n  }, [])\r\n\r\n  async function removeProject(index) {\r\n    const [project, revert] = await projectMethods.remove(index)\r\n    repository.removeProject(project).catch(revert)\r\n  }\r\n  async function updateProject(index, props) {\r\n    const [project, revert] = await projectMethods.update(index, props)\r\n    repository.updateProject(project).catch(revert)\r\n  }\r\n  async function moveProject(direction, index) {\r\n    const [firstProject, secondProject, revert] = await projectMethods.move(\r\n      direction,\r\n      index\r\n    )\r\n    return Promise.all([\r\n      repository.updateProject(firstProject),\r\n      repository.updateProject(secondProject),\r\n    ]).catch(revert)\r\n  }\r\n  async function createProject() {\r\n    const newProject = new Project()\r\n    const [order, revert] = await projectMethods.add(newProject)\r\n    return repository.addProject({ ...newProject, order }).catch(revert)\r\n  }\r\n\r\n  const redirect = (path) => setLocation(path)\r\n\r\n  return (\r\n    <Projects\r\n      {...{\r\n        projects,\r\n        redirect,\r\n        removeProject,\r\n        updateProject,\r\n        moveProject,\r\n        createProject,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction Projects({\r\n  projects,\r\n  redirect,\r\n  removeProject,\r\n  updateProject,\r\n  moveProject,\r\n  createProject,\r\n}) {\r\n  function handleAddNew() {\r\n    const last = projects[projects.length - 1]\r\n    if (!last || last.title !== '') createProject()\r\n  }\r\n\r\n  function handleDelete(index) {\r\n    if (window.confirm('Are you sure you want to delete this project?')) {\r\n      removeProject(index)\r\n    }\r\n  }\r\n\r\n  function renderProject({ id, title }, index) {\r\n    return (\r\n      <div key={id} className=\"row\">\r\n        <div>\r\n          <button onClick={() => moveProject('up', index)} className=\"up\">\r\n            ↑\r\n          </button>\r\n          <button onClick={() => moveProject('down', index)} className=\"down\">\r\n            ↓\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <Input\r\n            value={title}\r\n            onChange={(title) => updateProject(index, { title })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => redirect('/' + id)}>>></button>\r\n        </div>\r\n        <div>\r\n          <button onClick={() => redirect('/statistics/' + id)}>stats</button>\r\n        </div>\r\n        <div>\r\n          <button onClick={() => handleDelete(index)}>X</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => redirect('/statistics')}>Stats by day</button>\r\n      <br />\r\n      <br />\r\n      <button onClick={handleAddNew}>Add</button>\r\n      <div className=\"list project-list\">{projects.map(renderProject)}</div>\r\n    </div>\r\n  )\r\n}\r\n","export const on = (el, events) => {\r\n  for (let name in events) el.addEventListener(name, events[name])\r\n}\r\n\r\nexport const off = (el, events) => {\r\n  for (let name in events) el.removeEventListener(name, events[name])\r\n}\r\n\r\nexport function State(state = {}) {\r\n  const watchers = {}\r\n\r\n  const update = (fresh) => {\r\n    for (let key in fresh) {\r\n      if (state[key] !== fresh[key]) {\r\n        state[key] = fresh[key]\r\n        watchers[key] && watchers[key].forEach((f) => f(fresh[key]))\r\n      }\r\n    }\r\n  }\r\n\r\n  const watch = (watchersObj) => {\r\n    for (let prop in watchersObj) {\r\n      watchers[prop]\r\n        ? watchers[prop].push(watchersObj[prop])\r\n        : (watchers[prop] = [watchersObj[prop]])\r\n    }\r\n  }\r\n\r\n  return [state, update, watch]\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport Input from 'components/Input'\r\nimport { secsToTime } from 'utils'\r\nimport durationPicker from './durationPicker/durationPicker'\r\n\r\n/*\r\nexport default function Estimate({ value: seconds, onChange }) {\r\n  const [hovered, setHovered] = useState(false)\r\n  return hovered ? (\r\n    <Input\r\n      type=\"number\"\r\n      step=\"0.25\"\r\n      onMouseLeave={() => setHovered(false)}\r\n      value={seconds / 60}\r\n      onChange={(val) => onChange(val * 60)}\r\n    />\r\n  ) : (\r\n    <Input\r\n      readOnly\r\n      onMouseEnter={() => setHovered(true)}\r\n      value={secsToTime(seconds)}\r\n    />\r\n  )\r\n}\r\n*/\r\n\r\nfunction timeToSecs(time) {\r\n  const [hours, minutes] = time.split(':').map(Number)\r\n  return hours * 60 * 60 + minutes * 60\r\n}\r\n\r\nexport default function Estimate({ value: seconds, onChange }) {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    return durationPicker(ref.current, {\r\n      onChange: (time) => onChange(timeToSecs(time)),\r\n    })\r\n  }, [])\r\n\r\n  return <input type=\"text\" ref={ref} defaultValue={secsToTime(seconds)} />\r\n}\r\n","import { padZero } from 'utils'\r\nimport { on, off, State } from './utils'\r\n\r\nexport default function durationPicker($el, emitEvent) {\r\n  const CONFIG = {\r\n    increment: {\r\n      hours: 1,\r\n      minutes: 5,\r\n    },\r\n  }\r\n\r\n  const [hours, minutes] = $el.value ? $el.value.split(':').map(Number) : [0, 0]\r\n\r\n  const [state, updateState, watchState] = new State({\r\n    hours,\r\n    minutes,\r\n    selected: null,\r\n  })\r\n\r\n  function stateChange() {\r\n    view.updateValue()\r\n    emitEvent.onChange(getTime())\r\n  }\r\n\r\n  watchState({\r\n    hours: stateChange,\r\n    minutes: stateChange,\r\n    selected: (selected) => view.select(selected),\r\n  })\r\n\r\n  const actions = {\r\n    increment(what) {\r\n      if (what === 'hours') {\r\n        const newHours = state.hours + CONFIG.increment.hours\r\n        newHours <= 99\r\n          ? updateState({ hours: newHours })\r\n          : updateState({ hours: 0 })\r\n      } else if (what === 'minutes') {\r\n        const newMinutes = state.minutes + CONFIG.increment.minutes\r\n        newMinutes < 60\r\n          ? updateState({ minutes: newMinutes })\r\n          : updateState({ minutes: 0 })\r\n      }\r\n    },\r\n\r\n    decrement(what) {\r\n      if (what === 'minutes') {\r\n        const newMinutes = state.minutes - CONFIG.increment.minutes\r\n        newMinutes >= 0\r\n          ? updateState({ minutes: newMinutes })\r\n          : updateState({ minutes: 60 + newMinutes })\r\n      } else if (what === 'hours') {\r\n        const newHours = state.hours - CONFIG.increment.hours\r\n        newHours >= 0\r\n          ? updateState({ hours: newHours })\r\n          : updateState({ hours: 99 })\r\n      }\r\n    },\r\n\r\n    switchSelected() {\r\n      updateState({\r\n        selected: state.selected === 'hours' ? 'minutes' : 'hours',\r\n      })\r\n    },\r\n  }\r\n\r\n  const getTime = () =>\r\n    `${padZero(state.hours, 2)}:${padZero(state.minutes, 2)}`\r\n\r\n  const view = {\r\n    updateValue() {\r\n      const [start, end] = [$el.selectionStart, $el.selectionEnd]\r\n      $el.value = `${getTime()}`\r\n      $el.setSelectionRange(start, end)\r\n    },\r\n\r\n    select(what) {\r\n      const strategy = {\r\n        minutes: () =>\r\n          $el.setSelectionRange($el.value.indexOf(':') + 1, $el.value.length),\r\n        hours: () => $el.setSelectionRange(0, $el.value.indexOf(':')),\r\n      }[what]\r\n\r\n      setTimeout(strategy)\r\n    },\r\n\r\n    registerEvents() {\r\n      const click = () => events.click()\r\n      const blur = () => events.blur()\r\n\r\n      function keydown(e) {\r\n        e.preventDefault()\r\n        const proxy = {\r\n          ArrowUp: 'up',\r\n          ArrowDown: 'down',\r\n          Tab: 'tab',\r\n        }\r\n\r\n        proxy[e.key]\r\n          ? events[proxy[e.key]](e.key)\r\n          : !isNaN(e.key) && events.numPress(e.key)\r\n      }\r\n\r\n      function wheel(e) {\r\n        if (state.selected) {\r\n          e.wheelDelta > 0 ? events.wheelUp() : events.wheelDown()\r\n        }\r\n      }\r\n\r\n      on($el, { click, keydown, blur })\r\n      on(window, { wheel })\r\n\r\n      return () => {\r\n        off($el, { click, keydown, blur })\r\n        off(window, { wheel })\r\n      }\r\n    },\r\n  }\r\n\r\n  const events = {\r\n    click: () => {\r\n      setTimeout(() => {\r\n        const selected =\r\n          $el.selectionStart > $el.value.indexOf(':') ? 'minutes' : 'hours'\r\n        updateState({ selected })\r\n        view.select(selected)\r\n      })\r\n    },\r\n    blur: () => updateState({ selected: null }),\r\n    up: () => actions.increment(state.selected),\r\n    down: () => actions.decrement(state.selected),\r\n    tab: () => actions.switchSelected(),\r\n    numPress: (number) => {\r\n      const last2Digits = (val) => val.slice(-2)\r\n\r\n      const strategy = {\r\n        hours: () => {\r\n          updateState({ hours: Number(last2Digits(state.hours + number)) })\r\n        },\r\n        minutes: () => {\r\n          const newMinutes = Number(last2Digits(state.minutes + number), 2)\r\n          newMinutes <= 60\r\n            ? updateState({ minutes: newMinutes })\r\n            : updateState({ minutes: '0' + String(newMinutes)[1] })\r\n        },\r\n      }[state.selected]()\r\n    },\r\n    wheelUp: () => actions.increment(state.selected),\r\n    wheelDown: () => actions.decrement(state.selected),\r\n  }\r\n\r\n  const unregisterEvents = view.registerEvents()\r\n\r\n  function destroy() {\r\n    unregisterEvents()\r\n  }\r\n\r\n  return destroy\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return <h3>Resource not found!</h3>\r\n}\r\n","import { createModel, uuid } from './utils'\r\n\r\nconst TaskModel = createModel({\r\n  id: () => uuid(),\r\n  projectId: true,\r\n  title: '',\r\n  estimate: 0,\r\n  order: null,\r\n})\r\n\r\nexport default TaskModel\r\n","import React, { useEffect, useRef } from 'react'\r\n\r\nexport default function ChildListObserver({\r\n  type = 'div',\r\n  children,\r\n  onInsert,\r\n  ...props\r\n}) {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    const observer = new MutationObserver((mutations) =>\r\n      onInsert(mutations, ref.current)\r\n    )\r\n    observer.observe(ref.current, { childList: true })\r\n  }, [])\r\n\r\n  return React.createElement(type, { ref, ...props }, children)\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Estimate from 'components/Estimate/Estimate'\r\nimport Input from 'components/Input'\r\nimport NotFound from 'components/NotFound'\r\nimport { classes, secsToTime, startOfDay } from 'utils'\r\nimport { useLocation } from 'wouter'\r\nimport { useInterval, useImmer, useOrderable } from 'hooks'\r\nimport repository from 'db/repository'\r\nimport Task from 'db/models/TaskModel'\r\nimport ChildListObserver from 'components/ChildListObserver'\r\n\r\nexport default function Container({ params: { projectId } }) {\r\n  const [_, setLocation] = useLocation()\r\n  const [project, updateProject] = useImmer({})\r\n  const [tasks, tasksMethods] = useOrderable('order')\r\n  const [activeTaskIndex, updateActiveTaskIndex] = useImmer(null)\r\n\r\n  function mapData({ ids, entities }) {\r\n    const isToday = (time) => time.day === startOfDay(new Date()).getTime()\r\n    const project = entities.projects[ids[0]]\r\n\r\n    if (!project) return { project: null, tasks: [] }\r\n\r\n    const tasks = project.tasks.map((id) => {\r\n      const task = entities.tasks[id]\r\n      task.time = task.times.reduce(\r\n        ({ total, today }, timeId) => {\r\n          const time = entities.times[timeId]\r\n          if (isToday(time)) {\r\n            return {\r\n              total: total + time.duration,\r\n              today: today + time.duration,\r\n            }\r\n          } else {\r\n            return { total: total + time.duration, today }\r\n          }\r\n        },\r\n        { total: 0, today: 0 }\r\n      )\r\n\r\n      delete task.times\r\n      return task\r\n    })\r\n\r\n    return { project, tasks }\r\n  }\r\n\r\n  useEffect(() => {\r\n    ;(async function () {\r\n      const { project, tasks } = mapData(\r\n        await repository.getTasksWithTimesBelongingToProject(projectId)\r\n      )\r\n      tasksMethods.set(tasks)\r\n      updateProject(project)\r\n    })()\r\n  }, [])\r\n\r\n  useInterval(updateActiveTaskTime, activeTaskIndex !== null && 1000)\r\n\r\n  async function updateActiveTaskTime() {\r\n    const time = tasks[activeTaskIndex].time\r\n    const [task, revert] = await tasksMethods.update(activeTaskIndex, {\r\n      time: {\r\n        today: time.today + 1,\r\n        total: time.total + 1,\r\n      },\r\n    })\r\n\r\n    return repository.updateTaskDailyTime(task).catch(revert)\r\n  }\r\n\r\n  async function updateTask(index, props) {\r\n    const [task, revert] = await tasksMethods.update(index, props)\r\n    return repository.updateTask(task).catch(revert)\r\n  }\r\n\r\n  async function moveTask(direction, index) {\r\n    const [firstTask, secondTask, revert] = await tasksMethods.move(\r\n      direction,\r\n      index\r\n    )\r\n    return Promise.all([\r\n      repository.updateTask(firstTask),\r\n      repository.updateTask(secondTask),\r\n    ]).catch(revert)\r\n  }\r\n\r\n  async function removeTask(index) {\r\n    const [item, revert] = await tasksMethods.remove(index)\r\n    if (index === activeTaskIndex) updateActiveTaskIndex(() => null)\r\n    return repository.removeTask(item).catch(revert)\r\n  }\r\n\r\n  async function createTask() {\r\n    const newTask = new Task({ projectId })\r\n    const [order, revert] = await tasksMethods.add({\r\n      ...newTask,\r\n      time: { total: 0, today: 0 },\r\n    })\r\n    return repository.addTask({ ...newTask, order }).catch(revert)\r\n  }\r\n\r\n  const redirect = (path) => setLocation(path)\r\n\r\n  const activateTask = (index) => updateActiveTaskIndex(() => index)\r\n  const deactivateTask = (index) =>\r\n    updateActiveTaskIndex((currentlyActive) =>\r\n      currentlyActive === index ? null : index\r\n    )\r\n\r\n  return project ? (\r\n    <Tasks\r\n      {...{\r\n        redirect,\r\n        project,\r\n        tasks,\r\n        updateTask,\r\n        moveTask,\r\n        createTask,\r\n        removeTask,\r\n        activeTaskIndex,\r\n        activateTask,\r\n        deactivateTask,\r\n      }}\r\n    />\r\n  ) : (\r\n    <NotFound />\r\n  )\r\n}\r\n\r\nfunction Tasks({\r\n  redirect,\r\n  project,\r\n  tasks,\r\n  updateTask,\r\n  moveTask,\r\n  createTask,\r\n  removeTask,\r\n  activeTaskIndex,\r\n  activateTask,\r\n  deactivateTask,\r\n}) {\r\n  function handleCreate() {\r\n    if (tasks.length === 0 || tasks[0].title) createTask()\r\n  }\r\n\r\n  function focusFirstTask(mutations, target) {\r\n    target.children[0].querySelector('.task-title input').focus()\r\n  }\r\n\r\n  function renderTask(task, index) {\r\n    const { id, title, estimate, time } = task\r\n    const active = activeTaskIndex === index\r\n\r\n    return (\r\n      <div key={id} className={classes('row', { active })}>\r\n        <div>\r\n          <button onClick={() => moveTask('up', index)} className=\"up\">\r\n            ↑\r\n          </button>\r\n          <button onClick={() => moveTask('down', index)} className=\"down\">\r\n            ↓\r\n          </button>\r\n        </div>\r\n        <div className=\"task-title\">\r\n          <Input\r\n            value={title}\r\n            onChange={(title) => updateTask(index, { title })}\r\n            onKeyPress={(e) =>\r\n              index === 0 && e.key === 'Enter' && handleCreate()\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <Estimate\r\n            value={estimate}\r\n            onChange={(estimate) => updateTask(index, { estimate })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"time\"\r\n            onClick={() =>\r\n              active ? deactivateTask(index) : activateTask(index)\r\n            }\r\n          >\r\n            {secsToTime(time.total)}\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button onClick={() => removeTask(index)}>X</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => redirect('/')}>{'<<<<'}</button>\r\n      <button onClick={() => redirect(`statistics/${project.id}`)}>\r\n        stats\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <h3>{project.title}</h3>\r\n      <button onClick={handleCreate}>Add new</button>\r\n      {tasks.length ? (\r\n        <ChildListObserver className=\"list task-list\" onInsert={focusFirstTask}>\r\n          {tasks.map(renderTask)}\r\n        </ChildListObserver>\r\n      ) : (\r\n        <p>No tasks created yet.</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useImmer } from 'hooks'\r\nimport repository from 'db/repository'\r\nimport { yyyymmdd, secsToTime } from 'utils'\r\n\r\nexport default function Container() {\r\n  const [day, setDay] = useState(yyyymmdd(new Date()))\r\n  const [projects, updateProjects] = useImmer([])\r\n  const [total, updateTotal] = useImmer()\r\n\r\n  function mapData({ ids, entities }) {\r\n    const projects = ids.map((projectId) => {\r\n      const tasks = entities.projects[projectId].tasks.map((taskId) => {\r\n        return {\r\n          ...entities.tasks[taskId],\r\n          totalTime: entities.tasks[taskId].times.reduce((acc, timeId) => {\r\n            return acc + entities.times[timeId].duration\r\n          }, 0),\r\n        }\r\n      })\r\n\r\n      const total = tasks.reduce((acc, task) => acc + task.totalTime, 0)\r\n\r\n      return {\r\n        ...entities.projects[projectId],\r\n        tasks,\r\n        total,\r\n      }\r\n    })\r\n\r\n    const total = projects.reduce((acc, project) => acc + project.total, 0)\r\n\r\n    return {\r\n      projects,\r\n      total,\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    ;(async function () {\r\n      if (day) {\r\n        const { projects, total } = mapData(\r\n          await repository.getStatisticsOnDay(new Date(day))\r\n        )\r\n        updateProjects(projects)\r\n        updateTotal(total)\r\n      } else {\r\n        updateProjects([])\r\n      }\r\n    })()\r\n  }, [day])\r\n\r\n  return (\r\n    <ByDay day={day} projects={projects} onDayChange={setDay} total={total} />\r\n  )\r\n}\r\n\r\nfunction ByDay({ day, projects, total, onDayChange }) {\r\n  function renderProject(project) {\r\n    return (\r\n      <div key={project.id}>\r\n        <h3>{project.title}</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>task</th>\r\n              <th>time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {project.tasks.map(renderTask)}\r\n            <tr>\r\n              <td></td>\r\n              <td>{secsToTime(project.total)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function renderTask(task) {\r\n    return (\r\n      <tr key={task.id}>\r\n        <td>{task.title}</td>\r\n        <td>{secsToTime(task.totalTime)}</td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    projects && (\r\n      <div>\r\n        <h3>Statistics for:</h3>\r\n        <input\r\n          type=\"date\"\r\n          value={day}\r\n          onChange={(e) => onDayChange(e.target.value)}\r\n        />\r\n        <small className=\"total\">{secsToTime(total)}</small>\r\n\r\n        <div>{projects.map((project) => renderProject(project))}</div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useImmer } from 'hooks'\r\nimport { groupBy, yyyymmdd, secsToTime, sortByKey } from 'utils'\r\nimport repository from 'db/repository'\r\nimport NotFound from 'components/NotFound'\r\n\r\nexport default function Container({ id }) {\r\n  const [{ project, taskTimesByDay }, updateState] = useImmer({\r\n    project: null,\r\n    taskTimesByDay: {},\r\n  })\r\n\r\n  function mapData({ ids, entities }) {\r\n    const project = entities.projects[ids[0]]\r\n\r\n    const taskTimesByDay = sortByKey(\r\n      groupBy(Object.values(entities.times), 'day'),\r\n      'desc'\r\n    )\r\n\r\n    for (let day in taskTimesByDay) {\r\n      taskTimesByDay[day] = {\r\n        tasks: taskTimesByDay[day].map(({ duration, taskId }) => ({\r\n          id: taskId,\r\n          title: entities.tasks[taskId].title,\r\n          duration,\r\n        })),\r\n        total: taskTimesByDay[day].reduce(\r\n          (acc, time) => acc + time.duration,\r\n          0\r\n        ),\r\n      }\r\n    }\r\n\r\n    project.total = Object.values(taskTimesByDay).reduce(\r\n      (acc, { total }) => acc + total,\r\n      0\r\n    )\r\n\r\n    return {\r\n      project,\r\n      taskTimesByDay,\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    ;(async function () {\r\n      updateState(mapData(await repository.getStatisticsBelongingToProject(id)))\r\n    })()\r\n  }, [])\r\n\r\n  return project ? (\r\n    <ByProject project={project} taskTimesByDay={taskTimesByDay} />\r\n  ) : (\r\n    <NotFound />\r\n  )\r\n}\r\n\r\nfunction ByProject({ project, taskTimesByDay }) {\r\n  function renderTasks(tasks) {\r\n    return tasks.map((task) => {\r\n      return (\r\n        <tr key={task.id}>\r\n          <td>{task.title}</td>\r\n          <td>{secsToTime(task.duration)}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Statistics for \"{project.title}\"\r\n        <small className=\"total\">{secsToTime(project.total)}</small>\r\n      </h3>\r\n\r\n      {Object.keys(taskTimesByDay).map((day) => {\r\n        return (\r\n          <div key={day}>\r\n            <h4>{yyyymmdd(new Date(Number(day)))} </h4>\r\n\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>task</th>\r\n                  <th>time</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {renderTasks(taskTimesByDay[day].tasks)}\r\n                <tr>\r\n                  <td></td>\r\n                  <td>{secsToTime(taskTimesByDay[day].total)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ByDay from './ByDay'\r\nimport ByProject from './ByProject'\r\nimport { useLocation } from 'wouter'\r\n\r\nexport default function Statistics({ params: { projectId } }) {\r\n  const [_, setLocation] = useLocation()\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setLocation('/')}>{'<<<<'}</button>\r\n      {projectId ? <ByProject id={projectId} /> : <ByDay />}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles.css'\r\nimport ProjectsPage from 'pages/ProjectsPage'\r\nimport TasksPage from 'pages/TasksPage'\r\nimport StatisticsPage from 'pages/StatisticsPage/StatisticsPage'\r\nimport { Switch, Route } from 'wouter'\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={ProjectsPage} />\r\n      <Route path=\"/statistics/:projectId?\" component={StatisticsPage} />\r\n      <Route path=\"/:projectId\" component={TasksPage} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n//serviceWorker.register()\r\n"],"sourceRoot":""}